<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard - MaycolAIUltra-MD</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --primary-color: #1a1a25;
      --secondary-color: #222233;
      --card-color: #2a2a3a;
      --accent-color: #D43F4D;
      --accent-secondary: #4b55b8;
      --text-color: #ffffff;
      --border-radius: 8px;
      --box-shadow: 0 8px 16px rgba(0, 0, 0, 0.25);
      --transition: all 0.3s ease;
    }
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Poppins', sans-serif;
    }
    
    body {
      background-color: var(--primary-color);
      color: var(--text-color);
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      position: relative;
      overflow-x: hidden;
    }
    
    body::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: url('https://i.imgur.com/FTG8jp1.png');
      background-size: 300px;
      background-repeat: repeat;
      opacity: 0.03;
      pointer-events: none;
      z-index: -1;
    }
    
    .sidebar {
      width: 260px;
      background-color: var(--secondary-color);
      height: 100vh;
      position: fixed;
      top: 0;
      left: 0;
      padding: 20px 0;
      transition: var(--transition);
      z-index: 1000;
      box-shadow: 4px 0 10px rgba(0, 0, 0, 0.2);
      overflow-y: auto;
      background-image: linear-gradient(
        to bottom,
        var(--secondary-color),
        var(--secondary-color)
      ), url('https://i.imgur.com/9ynfzBn.png');
      background-size: cover;
      background-position: center;
      background-blend-mode: overlay;
    }
    
    .sidebar-header {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 0 20px;
      margin-bottom: 30px;
    }
    
    .sidebar-logo {
      width: 45px;
      height: 45px;
      border-radius: 50%;
      display: flex;
      justify-content: center;
      align-items: center;
      margin-right: 10px;
      overflow: hidden;
      border: 2px solid var(--accent-color);
    }
    
    .sidebar-logo img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    .sidebar-title {
      font-size: 1.2rem;
      font-weight: 600;
      color: #fff;
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    }
    
    .sidebar-nav {
      list-style: none;
      padding: 0 10px;
    }
    
    .sidebar-nav li {
      margin-bottom: 5px;
    }
    
    .sidebar-nav li a {
      display: flex;
      align-items: center;
      padding: 12px 15px;
      color: rgba(255, 255, 255, 0.8);
      text-decoration: none;
      transition: var(--transition);
      border-radius: var(--border-radius);
      position: relative;
      overflow: hidden;
    }
    
    .sidebar-nav li a::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 3px;
      height: 100%;
      background-color: var(--accent-color);
      transform: scaleY(0);
      transition: transform 0.3s ease;
    }
    
    .sidebar-nav li a:hover::before,
    .sidebar-nav li a.active::before {
      transform: scaleY(1);
    }
    
    .sidebar-nav li a:hover,
    .sidebar-nav li a.active {
      background-color: rgba(212, 63, 77, 0.1);
      color: #fff;
      padding-left: 20px;
    }
    
    .sidebar-nav li a i {
      margin-right: 10px;
      width: 20px;
      text-align: center;
      font-size: 1.1rem;
    }
    
    .sidebar-footer {
      position: absolute;
      bottom: 20px;
      width: 100%;
      text-align: center;
      padding: 0 20px;
      color: rgba(255, 255, 255, 0.5);
      font-size: 0.75rem;
    }
    
    .seal {
      position: absolute;
      width: 40px;
      height: 40px;
      opacity: 0.2;
      background-image: url('https://i.imgur.com/QvkdSMM.png');
      background-size: contain;
      background-repeat: no-repeat;
      background-position: center;
    }
    
    .sidebar-seal {
      bottom: 90px;
      left: 30px;
      transform: rotate(-15deg);
    }
    
    .main-content {
      margin-left: 260px;
      padding: 20px;
      flex: 1;
      position: relative;
    }
    
    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 30px;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      padding-bottom: 15px;
      position: relative;
    }
    
    .welcome-message h1 {
      font-size: 1.8rem;
      margin-bottom: 5px;
      font-weight: 600;
      position: relative;
      display: inline-block;
    }
    
    .welcome-message h1::after {
      content: '';
      position: absolute;
      bottom: -3px;
      left: 0;
      width: 50px;
      height: 3px;
      background-color: var(--accent-color);
      border-radius: 3px;
    }
    
    .welcome-message p {
      color: rgba(255, 255, 255, 0.7);
      font-size: 0.9rem;
    }
    
    .user-info {
      display: flex;
      align-items: center;
      background-color: var(--secondary-color);
      padding: 8px 15px;
      border-radius: var(--border-radius);
      box-shadow: var(--box-shadow);
    }
    
    .user-avatar {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background-color: var(--accent-secondary);
      display: flex;
      justify-content: center;
      align-items: center;
      margin-right: 12px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
      border: 2px solid rgba(255, 255, 255, 0.1);
      overflow: hidden;
    }
    
    .user-avatar img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    .user-name {
      font-weight: 600;
      font-size: 0.95rem;
    }
    
    .user-role {
      font-size: 0.75rem;
      color: rgba(255, 255, 255, 0.7);
    }
    
    .dashboard-cards {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 20px;
      margin-bottom: 30px;
    }
    
    .card {
      background-color: var(--card-color);
      border-radius: var(--border-radius);
      padding: 20px;
      box-shadow: var(--box-shadow);
      transition: var(--transition);
      position: relative;
      overflow: hidden;
      border: 1px solid rgba(255, 255, 255, 0.05);
    }
    
    .card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
      border-color: rgba(212, 63, 77, 0.3);
    }
    
    .card::before {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      width: 80px;
      height: 80px;
      background: linear-gradient(
        to bottom left,
        rgba(212, 63, 77, 0.2),
        rgba(212, 63, 77, 0)
      );
      border-radius: 0 0 0 100%;
      z-index: 0;
    }
    
    .card-header {
      display: flex;
      align-items: center;
      margin-bottom: 15px;
      position: relative;
      z-index: 2;
    }
    
    .card-icon {
      width: 42px;
      height: 42px;
      border-radius: 50%;
      background-color: rgba(212, 63, 77, 0.1);
      display: flex;
      justify-content: center;
      align-items: center;
      margin-right: 12px;
      flex-shrink: 0;
    }
    
    .card-icon i {
      color: var(--accent-color);
      font-size: 1.2rem;
    }
    
    .card-title {
      font-size: 1rem;
      font-weight: 500;
      color: rgba(255, 255, 255, 0.9);
    }
    
    .card-value {
      font-size: 2.2rem;
      font-weight: 600;
      margin: 10px 0 8px;
      color: #fff;
      text-shadow: 0 2px 3px rgba(0, 0, 0, 0.2);
      position: relative;
      z-index: 2;
    }
    
    .card-description {
      color: rgba(255, 255, 255, 0.7);
      font-size: 0.85rem;
      position: relative;
      z-index: 2;
    }
    
    .card-badge {
      position: absolute;
      top: 15px;
      right: 15px;
      background-color: rgba(212, 63, 77, 0.2);
      color: var(--accent-color);
      font-size: 0.7rem;
      padding: 3px 8px;
      border-radius: 12px;
      z-index: 3;
    }
    
    .recent-activity {
      background-color: var(--card-color);
      border-radius: var(--border-radius);
      padding: 25px;
      box-shadow: var(--box-shadow);
      position: relative;
      overflow: hidden;
      border: 1px solid rgba(255, 255, 255, 0.05);
    }
    
    .recent-activity::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 4px;
      background: linear-gradient(
        to right,
        var(--accent-color),
        var(--accent-secondary)
      );
    }
    
    .section-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 25px;
    }
    
    .section-title {
      font-size: 1.3rem;
      font-weight: 600;
      position: relative;
      color: #fff;
    }
    
    .view-all {
      color: var(--accent-color);
      text-decoration: none;
      font-size: 0.85rem;
      font-weight: 500;
      transition: var(--transition);
      display: flex;
      align-items: center;
    }
    
    .view-all i {
      margin-left: 5px;
      font-size: 0.7rem;
    }
    
    .view-all:hover {
      color: var(--accent-light);
      transform: translateX(3px);
    }
    
    .activity-list {
      list-style: none;
    }
    
    .activity-item {
      display: flex;
      align-items: center;
      padding: 15px 0;
      border-bottom: 1px solid rgba(255, 255, 255, 0.05);
      transition: var(--transition);
    }
    
    .activity-item:hover {
      background-color: rgba(255, 255, 255, 0.02);
      padding-left: 5px;
    }
    
    .activity-item:last-child {
      border-bottom: none;
    }
    
    .activity-icon {
      width: 38px;
      height: 38px;
      border-radius: 50%;
      background-color: rgba(212, 63, 77, 0.1);
      display: flex;
      justify-content: center;
      align-items: center;
      margin-right: 15px;
      flex-shrink: 0;
    }
    
    .activity-icon i {
      color: var(--accent-color);
      font-size: 1rem;
    }
    
    .activity-content {
      flex: 1;
    }
    
    .activity-title {
      font-weight: 500;
      margin-bottom: 3px;
      color: rgba(255, 255, 255, 0.9);
    }
    
    .activity-time {
      font-size: 0.75rem;
      color: rgba(255, 255, 255, 0.5);
      display: flex;
      align-items: center;
    }
    
    .activity-time i {
      font-size: 0.7rem;
      margin-right: 4px;
    }
    
    .menu-toggle {
      display: none;
      background: none;
      border: none;
      color: white;
      font-size: 1.5rem;
      cursor: pointer;
      padding: 5px;
    }
    
    /* Hanako-kun specific elements */
    .hanako-silhouette {
      position: fixed;
      bottom: 10px;
      right: 20px;
      width: 180px;
      height: 180px;
      background-image: url('https://i.imgur.com/FTG8jp1.png');
      background-size: contain;
      background-repeat: no-repeat;
      background-position: center;
      opacity: 0.15;
      pointer-events: none;
      z-index: 0;
    }
    
    @media (max-width: 992px) {
      .dashboard-cards {
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
      }
    }
    
    @media (max-width: 768px) {
      .sidebar {
        transform: translateX(-100%);
      }
      
      .main-content {
        margin-left: 0;
      }
      
      .menu-toggle {
        display: block;
      }
      
      .sidebar.active {
        transform: translateX(0);
      }
      
      .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 999;
        display: none;
      }
      
      .overlay.active {
        display: block;
      }
    }
  </style>
</head>
<body>
  <div class="sidebar" id="sidebar">
    <div class="sidebar-header">
      <div class="sidebar-logo">
        <img src="https://i.imgur.com/QvkdSMM.png" alt="Hanako-kun Logo">
      </div>
      <div class="sidebar-title">MaycolAIUltra-MD</div>
    </div>
    
    <ul class="sidebar-nav">
      <li>
        <a href="/dashboard" class="<%= typeof activePage !== 'undefined' && activePage === 'dashboard' ? 'active' : (typeof activePage === 'undefined' ? 'active' : '') %>">
          <i class="fas fa-home"></i> Dashboard
        </a>
      </li>
      <li>
        <a href="/profile" class="<%= typeof activePage !== 'undefined' && activePage === 'profile' ? 'active' : '' %>">
          <i class="fas fa-user"></i> Mi Perfil
        </a>
      </li>
      <li>
        <a href="/stats" class="<%= typeof activePage !== 'undefined' && activePage === 'stats' ? 'active' : '' %>">
          <i class="fas fa-chart-line"></i> Estadísticas
        </a>
      </li>
      <li>
        <a href="/command-stats" class="<%= typeof activePage !== 'undefined' && activePage === 'command-stats' ? 'active' : '' %>">
          <i class="fas fa-history"></i> Comandos Usados
        </a>
      </li>
      <li>
        <a href="/subbots" class="<%= typeof activePage !== 'undefined' && activePage === 'subbots' ? 'active' : '' %>">
          <i class="fas fa-robot"></i> Mi Sub-Bot
        </a>
      </li>
      <li>
        <a href="/ai-chat" class="<%= typeof activePage !== 'undefined' && activePage === 'ai-chat' ? 'active' : '' %>">
          <i class="fas fa-brain"></i> Chat con Gemini
        </a>
      </li>
      <li>
        <a href="/commands" class="<%= typeof activePage !== 'undefined' && activePage === 'commands' ? 'active' : '' %>">
          <i class="fas fa-terminal"></i> Comandos
        </a>
      </li>
      <li>
        <a href="/logout">
          <i class="fas fa-sign-out-alt"></i> Cerrar Sesión
        </a>
      </li>
    </ul>
    
    <div class="seal sidebar-seal"></div>
    
    <div class="sidebar-footer">
      &copy; 2025 MaycolAIUltra-MD<br>
      Desarrollado por Maycol
    </div>
  </div>
  
  <div class="overlay" id="overlay"></div>
  
  <div class="main-content">
    <div class="header">
      <button class="menu-toggle" id="menu-toggle">
        <i class="fas fa-bars"></i>
      </button>
      
      <div class="welcome-message">
        <h1>Bienvenido, <%= userData.name %></h1>
        <p>Panel de Control | <%= new Date().toLocaleDateString() %></p>
      </div>
      
      <div class="user-info">
        <div class="user-avatar">
          <img src="https://i.imgur.com/S1E8OYR.png" alt="User Avatar">
        </div>
        <div>
          <div class="user-name"><%= username %></div>
          <div class="user-role"><%= userData.role %></div>
        </div>
      </div>
    </div>
    
    <% if (typeof activePage === 'undefined' || activePage === 'dashboard') { %>
    <!-- Dashboard Principal -->
    <div class="dashboard-cards">
      <div class="card">
        <span class="card-badge">Principal</span>
        <div class="card-header">
          <div class="card-icon">
            <i class="fas fa-crown"></i>
          </div>
          <div class="card-title">Nivel</div>
        </div>
        <div class="card-value"><%= userData.level %></div>
        <div class="card-description">Tu nivel actual en el bot</div>
      </div>
      
      <div class="card">
        <div class="card-header">
          <div class="card-icon">
            <i class="fas fa-bolt"></i>
          </div>
          <div class="card-title">Experiencia</div>
        </div>
        <div class="card-value"><%= userData.exp %> XP</div>
        <div class="card-description">Experiencia acumulada</div>
      </div>
      
      <div class="card">
        <div class="card-header">
          <div class="card-icon">
            <i class="fas fa-coins"></i>
          </div>
          <div class="card-title">Monedas</div>
        </div>
        <div class="card-value"><%= userData.coins %></div>
        <div class="card-description">Monedas disponibles</div>
      </div>
      
      <div class="card">
        <div class="card-header">
          <div class="card-icon">
            <i class="fas fa-stopwatch"></i>
          </div>
          <div class="card-title">Límite</div>
        </div>
        <div class="card-value"><%= userData.limit %></div>
        <div class="card-description">Límites de uso restantes</div>
      </div>
    </div>
    
    <div class="recent-activity">
      <div class="section-header">
        <div class="section-title">Actividad Reciente</div>
        <a href="#" class="view-all">Ver Todo <i class="fas fa-chevron-right"></i></a>
      </div>
      
      <ul class="activity-list">
        <% if (userData.activities && userData.activities.length > 0) { %>
          <% userData.activities.forEach(activity => { %>
            <li class="activity-item">
              <div class="activity-icon">
                <i class="fas fa-<%= activity.icon %>"></i>
              </div>
              <div class="activity-content">
                <div class="activity-title"><%= activity.title %></div>
                <div class="activity-time"><i class="fas fa-clock"></i> <%= activity.time %></div>
              </div>
            </li>
          <% }); %>
        <% } else { %>
          <li class="activity-item">
            <div class="activity-icon">
              <i class="fas fa-info-circle"></i>
            </div>
            <div class="activity-content">
              <div class="activity-title">No hay actividades recientes</div>
              <div class="activity-time"><i class="fas fa-clock"></i> Ahora</div>
            </div>
          </li>
        <% } %>
      </ul>
    </div>
    <% } %>
    
    <% if (typeof activePage !== 'undefined' && activePage === 'subbots') { %>
    <!-- Sección de Subbots -->
    <div class="section-header">
      <div class="section-title">Mi Sub-Bot</div>
    </div>
    
    <div class="dashboard-cards">
      <div class="card" style="grid-column: span 2;">
        <div class="card-header">
          <div class="card-icon">
            <i class="fas fa-robot"></i>
          </div>
          <div class="card-title">Estado de tu Sub-Bot</div>
        </div>
        
        <% if (typeof subbotInfo !== 'undefined' && subbotInfo.isConnected) { %>
          <div class="card-value" style="color: #4CAF50;">CONECTADO</div>
          <div class="card-description">
            Tu sub-bot está activo desde <%= new Date(subbotInfo.connectedAt).toLocaleString() %><br>
            Dispositivo: <%= subbotInfo.deviceName %>
          </div>
        <% } else { %>
          <div class="card-value" style="color: #F44336;">DESCONECTADO</div>
          <div class="card-description">
            No tienes un sub-bot conectado actualmente.<br>
            Usa el comando <strong>.serbot</strong> en WhatsApp para vincular un sub-bot.
          </div>
        <% } %>
      </div>
    </div>
    
    <div class="recent-activity">
      <div class="section-header">
        <div class="section-title">¿Cómo crear un Sub-Bot?</div>
      </div>
      
      <div style="padding: 20px; background-color: var(--card-color); border-radius: var(--border-radius); margin-top: 10px;">
        <ol style="padding-left: 20px; line-height: 1.7;">
          <li>Envía el comando <strong>.serbot</strong> al bot en WhatsApp.</li>
          <li>Escanea el código QR que aparecerá (tienes 45 segundos).</li>
          <li>O utiliza el código de 8 dígitos con el comando <strong>.serbot --code</strong>.</li>
          <li>Tu número se convertirá en un sub-bot temporal del bot principal.</li>
          <li>Para desconectar, usa <strong>.delserbot</strong>.</li>
        </ol>
        
        <div style="margin-top: 20px; padding: 15px; background-color: rgba(212, 63, 77, 0.1); border-radius: var(--border-radius); border-left: 3px solid var(--accent-color);">
          <strong>⚠️ Importante:</strong> No es recomendable usar tu número principal para esto. Si el bot principal se reinicia, tu sub-bot se desconectará automáticamente.
        </div>
      </div>
    </div>
    <% } %>
    
    <% if (typeof activePage !== 'undefined' && activePage === 'command-stats') { %>
    <!-- Sección de Estadísticas de Comandos -->
    <div class="section-header">
      <div class="section-title">Mis Comandos Más Usados</div>
    </div>
    
    <div class="recent-activity">
      <div style="padding: 20px; background-color: var(--card-color); border-radius: var(--border-radius); margin-top: 10px;">
        <% if (typeof commandStats !== 'undefined' && commandStats.total > 0) { %>
          <div style="margin-bottom: 20px;">
            <h3 style="margin-bottom: 10px; font-size: 1.2rem;">Total de comandos ejecutados: <%= commandStats.total %></h3>
            <p style="color: rgba(255, 255, 255, 0.7); font-size: 0.9rem;">
              Último comando usado: <%= new Date(commandStats.lastUsed).toLocaleString() %>
            </p>
          </div>
          
          <div class="command-stats-grid" style="display: grid; grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); gap: 15px;">
            <% Object.entries(commandStats.commands).forEach(([cmdName, count]) => { %>
              <div class="command-stat-card" style="background-color: var(--secondary-color); padding: 15px; border-radius: var(--border-radius); border: 1px solid rgba(255, 255, 255, 0.05);">
                <div style="font-weight: 600; font-size: 0.95rem; margin-bottom: 5px; color: var(--accent-color);">
                  .<%= cmdName %>
                </div>
                <div style="font-size: 1.5rem; font-weight: 600; margin: 10px 0;">
                  <%= count %>
                </div>
                <div style="font-size: 0.8rem; color: rgba(255, 255, 255, 0.6);">
                  <%= Math.round((count / commandStats.total) * 100) %>% del total
                </div>
              </div>
            <% }); %>
          </div>
        <% } else { %>
          <div style="text-align: center; padding: 40px 20px;">
            <i class="fas fa-clipboard-list" style="font-size: 3rem; color: rgba(255, 255, 255, 0.3); margin-bottom: 20px;"></i>
            <h3 style="margin-bottom: 10px; font-size: 1.2rem;">No hay datos de comandos</h3>
            <p style="color: rgba(255, 255, 255, 0.7); font-size: 0.9rem;">
              Aún no has utilizado comandos con el bot o tus datos no han sido registrados.
            </p>
          </div>
        <% } %>
      </div>
    </div>
    <% } %>
    
    <% if (typeof activePage !== 'undefined' && activePage === 'ai-chat') { %>
    <!-- Sección de Chat con Gemini AI -->
    <div class="section-header">
      <div class="section-title">Chat con Gemini AI</div>
    </div>
    
    <div class="recent-activity">
      <div style="padding: 20px; background-color: var(--card-color); border-radius: var(--border-radius); margin-top: 10px;">
        <div id="chat-container" style="height: 400px; overflow-y: auto; margin-bottom: 20px; padding-right: 5px;">
          <% if (typeof chatHistory !== 'undefined' && chatHistory.length > 0) { %>
            <% chatHistory.forEach(msg => { %>
              <div class="chat-message <%= msg.role === 'user' ? 'user-message' : 'assistant-message' %>" 
                   style="margin-bottom: 15px; padding: 10px 15px; border-radius: 18px; 
                          max-width: 80%; 
                          <%= msg.role === 'user' ? 'background-color: var(--accent-color); margin-left: auto;' : 'background-color: var(--secondary-color);' %>">
                <div style="font-size: 0.9rem; margin-bottom: 4px; color: rgba(255, 255, 255, 0.8);">
                  <%= msg.role === 'user' ? 'Tú' : 'Gemini AI' %>
                </div>
                <div style="word-break: break-word;">
                  <%= msg.content %>
                </div>
                <div style="font-size: 0.7rem; margin-top: 5px; text-align: right; color: rgba(255, 255, 255, 0.6);">
                  <%= new Date(msg.timestamp).toLocaleTimeString() %>
                </div>
              </div>
            <% }); %>
          <% } else { %>
            <div style="text-align: center; padding: 80px 20px;">
              <i class="fas fa-robot" style="font-size: 3rem; color: rgba(255, 255, 255, 0.3); margin-bottom: 20px;"></i>
              <h3 style="margin-bottom: 10px; font-size: 1.2rem;">¡Inicia una conversación!</h3>
              <p style="color: rgba(255, 255, 255, 0.7); font-size: 0.9rem;">
                Escribe un mensaje para comenzar a chatear con Gemini AI.
              </p>
            </div>
          <% } %>
        </div>
        
        <div id="chat-input-container" style="display: flex; gap: 10px;">
          <input type="text" id="ai-message-input" placeholder="Escribe un mensaje para Gemini AI..." 
                 style="flex: 1; padding: 12px 15px; border-radius: var(--border-radius); 
                        background-color: var(--secondary-color); border: 1px solid rgba(255, 255, 255, 0.1); 
                        color: white; font-size: 0.95rem;">
          <button id="ai-send-button" 
                  style="padding: 0 15px; background-color: var(--accent-color); color: white; 
                         border: none; border-radius: var(--border-radius); cursor: pointer;">
            <i class="fas fa-paper-plane"></i>
          </button>
        </div>
      </div>
    </div>
    
    <script>
      // Scroll al final del chat
      function scrollChatToBottom() {
        const chatContainer = document.getElementById('chat-container');
        chatContainer.scrollTop = chatContainer.scrollHeight;
      }
      
      // Ejecutar al cargar la página
      scrollChatToBottom();
      
      // Función para enviar mensaje al AI
      async function sendMessageToAI() {
        const messageInput = document.getElementById('ai-message-input');
        const message = messageInput.value.trim();
        
        if (!message) return;
        
        // Limpiar input
        messageInput.value = '';
        
        // Crear elemento de mensaje del usuario
        const userMessageElement = document.createElement('div');
        userMessageElement.className = 'chat-message user-message';
        userMessageElement.style = 'margin-bottom: 15px; padding: 10px 15px; border-radius: 18px; max-width: 80%; background-color: var(--accent-color); margin-left: auto;';
        
        const userNameElement = document.createElement('div');
        userNameElement.style = 'font-size: 0.9rem; margin-bottom: 4px; color: rgba(255, 255, 255, 0.8);';
        userNameElement.textContent = 'Tú';
        
        const userContentElement = document.createElement('div');
        userContentElement.style = 'word-break: break-word;';
        userContentElement.textContent = message;
        
        const userTimeElement = document.createElement('div');
        userTimeElement.style = 'font-size: 0.7rem; margin-top: 5px; text-align: right; color: rgba(255, 255, 255, 0.6);';
        userTimeElement.textContent = new Date().toLocaleTimeString();
        
        userMessageElement.appendChild(userNameElement);
        userMessageElement.appendChild(userContentElement);
        userMessageElement.appendChild(userTimeElement);
        
        document.getElementById('chat-container').appendChild(userMessageElement);
        scrollChatToBottom();
        
        // Crear un elemento de carga
        const loadingElement = document.createElement('div');
        loadingElement.className = 'chat-message assistant-message';
        loadingElement.style = 'margin-bottom: 15px; padding: 10px 15px; border-radius: 18px; max-width: 80%; background-color: var(--secondary-color);';
        loadingElement.innerHTML = '<div style="font-size: 0.9rem; margin-bottom: 4px; color: rgba(255, 255, 255, 0.8);">Gemini AI</div><div>Pensando<span class="loading-dots">...</span></div>';
        
        document.getElementById('chat-container').appendChild(loadingElement);
        scrollChatToBottom();
        
        try {
          // Enviar mensaje al servidor
          const response = await fetch('/api/ai-chat', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ message })
          });
          
          const data = await response.json();
          
          // Eliminar elemento de carga
          document.getElementById('chat-container').removeChild(loadingElement);
          
          if (data.success) {
            // Crear elemento de respuesta del asistente
            const assistantMessageElement = document.createElement('div');
            assistantMessageElement.className = 'chat-message assistant-message';
            assistantMessageElement.style = 'margin-bottom: 15px; padding: 10px 15px; border-radius: 18px; max-width: 80%; background-color: var(--secondary-color);';
            
            const assistantNameElement = document.createElement('div');
            assistantNameElement.style = 'font-size: 0.9rem; margin-bottom: 4px; color: rgba(255, 255, 255, 0.8);';
            assistantNameElement.textContent = 'Gemini AI';
            
            const assistantContentElement = document.createElement('div');
            assistantContentElement.style = 'word-break: break-word;';
            assistantContentElement.textContent = data.response;
            
            const assistantTimeElement = document.createElement('div');
            assistantTimeElement.style = 'font-size: 0.7rem; margin-top: 5px; text-align: right; color: rgba(255, 255, 255, 0.6);';
            assistantTimeElement.textContent = new Date().toLocaleTimeString();
            
            assistantMessageElement.appendChild(assistantNameElement);
            assistantMessageElement.appendChild(assistantContentElement);
            assistantMessageElement.appendChild(assistantTimeElement);
            
            document.getElementById('chat-container').appendChild(assistantMessageElement);
            scrollChatToBottom();
          } else {
            // Mostrar error
            alert('Error: ' + data.message);
          }
        } catch (error) {
          // Eliminar elemento de carga
          document.getElementById('chat-container').removeChild(loadingElement);
          
          // Mostrar error
          console.error('Error:', error);
          alert('Error al enviar el mensaje. Por favor, inténtalo de nuevo.');
        }
      }
      
      // Event listeners
      document.getElementById('ai-send-button').addEventListener('click', sendMessageToAI);
      
      document.getElementById('ai-message-input').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
          sendMessageToAI();
        }
      });
      
      // Animación de puntos para el "pensando..."
      setInterval(() => {
        const dots = document.querySelectorAll('.loading-dots');
        dots.forEach(dot => {
          if (dot.textContent === '...') {
            dot.textContent = '.';
          } else if (dot.textContent === '.') {
            dot.textContent = '..';
          } else if (dot.textContent === '..') {
            dot.textContent = '...';
          }
        });
      }, 500);
    </script>
    <% } %>
  </div>
  
  <div class="hanako-silhouette"></div>
  
  <script>
    // Toggle sidebar on mobile
    document.getElementById('menu-toggle').addEventListener('click', function() {
      document.getElementById('sidebar').classList.toggle('active');
      document.getElementById('overlay').classList.toggle('active');
    });
    
    document.getElementById('overlay').addEventListener('click', function() {
      document.getElementById('sidebar').classList.remove('active');
      document.getElementById('overlay').classList.remove('active');
    });
  </script>
</body>
</html>