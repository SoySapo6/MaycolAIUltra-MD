const { spawn } = require('child_process');
const path = require('path');
const fs = require('fs');

// Ejecutar el bot en modo silencioso
const botProcess = spawn('node', ['index.js'], {
  cwd: path.join(process.cwd(), 'Goku-Black-Bot-MD'),
  stdio: ['pipe', 'pipe', 'pipe'] 
});

// Registrar la salida estÃ¡ndar pero SIN imprimirla en la consola
botProcess.stdout.on('data', (data) => {
  const output = data.toString();
  
  // No imprimimos nada a la consola
  
  // Solo procesamos el texto para detectar patrones
  
  // Cuando se muestre el menÃº de selecciÃ³n, elegir automÃ¡ticamente la opciÃ³n 2
  if (output.includes('Seleccione una opciÃ³n') || 
      output.includes('Con cÃ³digo QR') || 
      output.includes('Con cÃ³digo de texto de 8 dÃ­gitos')) {
    setTimeout(() => {
      botProcess.stdin.write('2\n');
    }, 1000);
  }
  
  // Patrones para detectar solicitud de nÃºmero de telÃ©fono
  const phonePatterns = [
    'Por favor, Ingrese el nÃºmero de WhatsApp',
    'Ingrese el nÃºmero de WhatsApp',
    'ðŸš© Por favor, Ingrese el nÃºmero',
    'Ingrese su nÃºmero de WhatsApp',
    'NÃºmero de telÃ©fono completo',
    'NÃºmero de WhatsApp',
    'ngrese el nÃºmero',
    'telÃ©fono',
    'whatsapp'
  ];
  
  // Verificar si alguno de los patrones estÃ¡ presente en la salida
  const phonePatternFound = phonePatterns.some(pattern => output.includes(pattern));
  
  // Cuando se solicite ingresar el nÃºmero de telÃ©fono, enviarlo automÃ¡ticamente
  if (phonePatternFound) {
    setTimeout(() => {
      const phoneNumber = '51921826291'; // Formato completo: cÃ³digo de paÃ­s (51) + nÃºmero completo (PERÃš)
      botProcess.stdin.write(phoneNumber + '\n');
    }, 1000);
  }
  
  // Si detectamos un cÃ³digo de vinculaciÃ³n, imprimirlo silenciosamente en un archivo
  if (output.includes('CÃ“DIGO DE VINCULACIÃ“N')) {
    fs.appendFileSync('codigo-vinculacion.txt', output.trim() + '\n');
  }
});

// Enviar nÃºmero de telÃ©fono despuÃ©s de un tiempo predeterminado en caso de que la detecciÃ³n falle
setTimeout(() => {
  botProcess.stdin.write('51921826291\n');
}, 15000);

// Manejar fin del proceso
botProcess.on('close', () => {
  process.exit();
});

// Manejar seÃ±ales para cerrar correctamente
process.on('SIGINT', () => {
  botProcess.kill('SIGINT');
  process.exit();
});

process.on('SIGTERM', () => {
  botProcess.kill('SIGTERM');
  process.exit();
});